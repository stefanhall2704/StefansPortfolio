name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main

jobs:
  login:
    name: Log into Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: login  # Ensures login completes first
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/stefanportfolio:latest --push .

  setup-ssh:
    name: Set up SSH Key
    runs-on: ubuntu-latest
    steps:
      - name: Create SSH directory and add private key
        run: |
          mkdir -p ~/.ssh
          echo "SSH Key (debug view):"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | awk '{print NR, $0}'  # Print each line with a number
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ls -lah ~/.ssh
          cat ~/.ssh/id_rsa | wc -l  # Count number of lines
        shell: bash

  deploy:
    name: Deploy to Raspberry Pi
    runs-on: ubuntu-latest
    needs: [build, setup-ssh]  # Ensures build and SSH setup finish first
    steps:
      - name: Deploy to Raspberry Pi
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            echo "Pulling latest docker image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stefanportfolio:latest
            echo "Stopping old container..."
            docker stop portfolio || true
            docker rm portfolio || true
            echo "Starting new container..."
            docker run -d --restart unless-stopped --name portfolio -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/stefanportfolio:latest
            echo "Deployment complete!"
          EOF

